// Generated by view binder compiler. Do not edit!
package com.vitatrack.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vitatrack.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddMealBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText etCalories;

  @NonNull
  public final EditText etCarbs;

  @NonNull
  public final EditText etFat;

  @NonNull
  public final EditText etMealName;

  @NonNull
  public final EditText etProtein;

  @NonNull
  public final Spinner spinnerMealType;

  private DialogAddMealBinding(@NonNull LinearLayout rootView, @NonNull EditText etCalories,
      @NonNull EditText etCarbs, @NonNull EditText etFat, @NonNull EditText etMealName,
      @NonNull EditText etProtein, @NonNull Spinner spinnerMealType) {
    this.rootView = rootView;
    this.etCalories = etCalories;
    this.etCarbs = etCarbs;
    this.etFat = etFat;
    this.etMealName = etMealName;
    this.etProtein = etProtein;
    this.spinnerMealType = spinnerMealType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddMealBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddMealBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_meal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddMealBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etCalories;
      EditText etCalories = ViewBindings.findChildViewById(rootView, id);
      if (etCalories == null) {
        break missingId;
      }

      id = R.id.etCarbs;
      EditText etCarbs = ViewBindings.findChildViewById(rootView, id);
      if (etCarbs == null) {
        break missingId;
      }

      id = R.id.etFat;
      EditText etFat = ViewBindings.findChildViewById(rootView, id);
      if (etFat == null) {
        break missingId;
      }

      id = R.id.etMealName;
      EditText etMealName = ViewBindings.findChildViewById(rootView, id);
      if (etMealName == null) {
        break missingId;
      }

      id = R.id.etProtein;
      EditText etProtein = ViewBindings.findChildViewById(rootView, id);
      if (etProtein == null) {
        break missingId;
      }

      id = R.id.spinnerMealType;
      Spinner spinnerMealType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerMealType == null) {
        break missingId;
      }

      return new DialogAddMealBinding((LinearLayout) rootView, etCalories, etCarbs, etFat,
          etMealName, etProtein, spinnerMealType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
