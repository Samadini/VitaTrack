// Generated by view binder compiler. Do not edit!
package com.vitatrack.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.vitatrack.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardNewBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnAdd250ml;

  @NonNull
  public final Button btnAdd500ml;

  @NonNull
  public final Button btnLogWater;

  @NonNull
  public final FloatingActionButton fabAdd;

  private FragmentDashboardNewBinding(@NonNull ScrollView rootView, @NonNull Button btnAdd250ml,
      @NonNull Button btnAdd500ml, @NonNull Button btnLogWater,
      @NonNull FloatingActionButton fabAdd) {
    this.rootView = rootView;
    this.btnAdd250ml = btnAdd250ml;
    this.btnAdd500ml = btnAdd500ml;
    this.btnLogWater = btnLogWater;
    this.fabAdd = fabAdd;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardNewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard_new, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardNewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd250ml;
      Button btnAdd250ml = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd250ml == null) {
        break missingId;
      }

      id = R.id.btnAdd500ml;
      Button btnAdd500ml = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd500ml == null) {
        break missingId;
      }

      id = R.id.btnLogWater;
      Button btnLogWater = ViewBindings.findChildViewById(rootView, id);
      if (btnLogWater == null) {
        break missingId;
      }

      id = R.id.fabAdd;
      FloatingActionButton fabAdd = ViewBindings.findChildViewById(rootView, id);
      if (fabAdd == null) {
        break missingId;
      }

      return new FragmentDashboardNewBinding((ScrollView) rootView, btnAdd250ml, btnAdd500ml,
          btnLogWater, fabAdd);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
