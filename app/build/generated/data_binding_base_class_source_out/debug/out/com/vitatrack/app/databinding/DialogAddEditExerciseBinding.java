// Generated by view binder compiler. Do not edit!
package com.vitatrack.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.vitatrack.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddEditExerciseBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final AutoCompleteTextView actvExerciseType;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final TextInputEditText etCaloriesBurned;

  @NonNull
  public final TextInputEditText etDuration;

  @NonNull
  public final TextInputEditText etExerciseName;

  @NonNull
  public final TextInputEditText etNotes;

  @NonNull
  public final TextInputLayout tilCaloriesBurned;

  @NonNull
  public final TextInputLayout tilDuration;

  @NonNull
  public final TextInputLayout tilExerciseName;

  @NonNull
  public final TextInputLayout tilExerciseType;

  @NonNull
  public final TextInputLayout tilNotes;

  @NonNull
  public final TextView tvDialogTitle;

  private DialogAddEditExerciseBinding(@NonNull ScrollView rootView,
      @NonNull AutoCompleteTextView actvExerciseType, @NonNull Button btnCancel,
      @NonNull Button btnSave, @NonNull TextInputEditText etCaloriesBurned,
      @NonNull TextInputEditText etDuration, @NonNull TextInputEditText etExerciseName,
      @NonNull TextInputEditText etNotes, @NonNull TextInputLayout tilCaloriesBurned,
      @NonNull TextInputLayout tilDuration, @NonNull TextInputLayout tilExerciseName,
      @NonNull TextInputLayout tilExerciseType, @NonNull TextInputLayout tilNotes,
      @NonNull TextView tvDialogTitle) {
    this.rootView = rootView;
    this.actvExerciseType = actvExerciseType;
    this.btnCancel = btnCancel;
    this.btnSave = btnSave;
    this.etCaloriesBurned = etCaloriesBurned;
    this.etDuration = etDuration;
    this.etExerciseName = etExerciseName;
    this.etNotes = etNotes;
    this.tilCaloriesBurned = tilCaloriesBurned;
    this.tilDuration = tilDuration;
    this.tilExerciseName = tilExerciseName;
    this.tilExerciseType = tilExerciseType;
    this.tilNotes = tilNotes;
    this.tvDialogTitle = tvDialogTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddEditExerciseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddEditExerciseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_edit_exercise, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddEditExerciseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actvExerciseType;
      AutoCompleteTextView actvExerciseType = ViewBindings.findChildViewById(rootView, id);
      if (actvExerciseType == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.etCaloriesBurned;
      TextInputEditText etCaloriesBurned = ViewBindings.findChildViewById(rootView, id);
      if (etCaloriesBurned == null) {
        break missingId;
      }

      id = R.id.etDuration;
      TextInputEditText etDuration = ViewBindings.findChildViewById(rootView, id);
      if (etDuration == null) {
        break missingId;
      }

      id = R.id.etExerciseName;
      TextInputEditText etExerciseName = ViewBindings.findChildViewById(rootView, id);
      if (etExerciseName == null) {
        break missingId;
      }

      id = R.id.etNotes;
      TextInputEditText etNotes = ViewBindings.findChildViewById(rootView, id);
      if (etNotes == null) {
        break missingId;
      }

      id = R.id.tilCaloriesBurned;
      TextInputLayout tilCaloriesBurned = ViewBindings.findChildViewById(rootView, id);
      if (tilCaloriesBurned == null) {
        break missingId;
      }

      id = R.id.tilDuration;
      TextInputLayout tilDuration = ViewBindings.findChildViewById(rootView, id);
      if (tilDuration == null) {
        break missingId;
      }

      id = R.id.tilExerciseName;
      TextInputLayout tilExerciseName = ViewBindings.findChildViewById(rootView, id);
      if (tilExerciseName == null) {
        break missingId;
      }

      id = R.id.tilExerciseType;
      TextInputLayout tilExerciseType = ViewBindings.findChildViewById(rootView, id);
      if (tilExerciseType == null) {
        break missingId;
      }

      id = R.id.tilNotes;
      TextInputLayout tilNotes = ViewBindings.findChildViewById(rootView, id);
      if (tilNotes == null) {
        break missingId;
      }

      id = R.id.tvDialogTitle;
      TextView tvDialogTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvDialogTitle == null) {
        break missingId;
      }

      return new DialogAddEditExerciseBinding((ScrollView) rootView, actvExerciseType, btnCancel,
          btnSave, etCaloriesBurned, etDuration, etExerciseName, etNotes, tilCaloriesBurned,
          tilDuration, tilExerciseName, tilExerciseType, tilNotes, tvDialogTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
