// Generated by view binder compiler. Do not edit!
package com.vitatrack.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vitatrack.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemExerciseBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageButton btnDeleteExercise;

  @NonNull
  public final ImageButton btnEditExercise;

  @NonNull
  public final ImageView ivExerciseIcon;

  @NonNull
  public final TextView tvCalories;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvDuration;

  @NonNull
  public final TextView tvExerciseName;

  @NonNull
  public final TextView tvExerciseType;

  @NonNull
  public final TextView tvIntensity;

  @NonNull
  public final TextView tvNotes;

  @NonNull
  public final TextView tvNotesLabel;

  @NonNull
  public final TextView tvTime;

  private ItemExerciseBinding(@NonNull CardView rootView, @NonNull ImageButton btnDeleteExercise,
      @NonNull ImageButton btnEditExercise, @NonNull ImageView ivExerciseIcon,
      @NonNull TextView tvCalories, @NonNull TextView tvDate, @NonNull TextView tvDuration,
      @NonNull TextView tvExerciseName, @NonNull TextView tvExerciseType,
      @NonNull TextView tvIntensity, @NonNull TextView tvNotes, @NonNull TextView tvNotesLabel,
      @NonNull TextView tvTime) {
    this.rootView = rootView;
    this.btnDeleteExercise = btnDeleteExercise;
    this.btnEditExercise = btnEditExercise;
    this.ivExerciseIcon = ivExerciseIcon;
    this.tvCalories = tvCalories;
    this.tvDate = tvDate;
    this.tvDuration = tvDuration;
    this.tvExerciseName = tvExerciseName;
    this.tvExerciseType = tvExerciseType;
    this.tvIntensity = tvIntensity;
    this.tvNotes = tvNotes;
    this.tvNotesLabel = tvNotesLabel;
    this.tvTime = tvTime;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemExerciseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemExerciseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_exercise, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemExerciseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeleteExercise;
      ImageButton btnDeleteExercise = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteExercise == null) {
        break missingId;
      }

      id = R.id.btnEditExercise;
      ImageButton btnEditExercise = ViewBindings.findChildViewById(rootView, id);
      if (btnEditExercise == null) {
        break missingId;
      }

      id = R.id.ivExerciseIcon;
      ImageView ivExerciseIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivExerciseIcon == null) {
        break missingId;
      }

      id = R.id.tvCalories;
      TextView tvCalories = ViewBindings.findChildViewById(rootView, id);
      if (tvCalories == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvDuration;
      TextView tvDuration = ViewBindings.findChildViewById(rootView, id);
      if (tvDuration == null) {
        break missingId;
      }

      id = R.id.tvExerciseName;
      TextView tvExerciseName = ViewBindings.findChildViewById(rootView, id);
      if (tvExerciseName == null) {
        break missingId;
      }

      id = R.id.tvExerciseType;
      TextView tvExerciseType = ViewBindings.findChildViewById(rootView, id);
      if (tvExerciseType == null) {
        break missingId;
      }

      id = R.id.tvIntensity;
      TextView tvIntensity = ViewBindings.findChildViewById(rootView, id);
      if (tvIntensity == null) {
        break missingId;
      }

      id = R.id.tvNotes;
      TextView tvNotes = ViewBindings.findChildViewById(rootView, id);
      if (tvNotes == null) {
        break missingId;
      }

      id = R.id.tvNotesLabel;
      TextView tvNotesLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvNotesLabel == null) {
        break missingId;
      }

      id = R.id.tvTime;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      return new ItemExerciseBinding((CardView) rootView, btnDeleteExercise, btnEditExercise,
          ivExerciseIcon, tvCalories, tvDate, tvDuration, tvExerciseName, tvExerciseType,
          tvIntensity, tvNotes, tvNotesLabel, tvTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
